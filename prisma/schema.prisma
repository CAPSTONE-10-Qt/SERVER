// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Answer {
  id                  Int     @id @default(autoincrement())
  interviewQuestionId Int
  questionId          Int
  interviewId         Int
  text                String?
  mumble              Int
  silent              Int
  talk                Int
  time                Int
  endDateTime   String?
}

model Feedback {
  id                  Int     @id @default(autoincrement())
  interviewQuestionId Int
  answerId            Int
  interviewId         Int
  score               Float?  @db.Real
  feedbackText        String?
}

model Interview {
  id            Int      @id @default(autoincrement())
  userId        Int
  startDateTime String
  endDateTime   String?
  questionNum   Int?
  score         Int?
  otherFeedback String?
  title         String?
  onlyVoice     Boolean?
  subjectId     Int
  textScore     Int?
  otherScore    Int?
  facePositive  Float?   @db.Real
  faceNegative  Float?   @db.Real
  faceNeutral   Float?   @db.Real
  totalTime     Int?
}

model Picture {
  id                  Int    @id @default(autoincrement())
  interviewQuestionId Int
  emotion             String
}

model Question {
  id           Int     @id @default(autoincrement())
  subjectId    Int
  questionText String?
  sampleAnswer String?
}

model Subject {
  id          Int     @id @default(autoincrement())
  subjectText String?
  questionNum Int?
}

model User {
  id           Int     @id @default(autoincrement())
  userName     String
  pictureURL   String?
  refreshToken String?
  social       String? @db.VarChar(10)
  snsId        String? @db.VarChar
  email        String? @db.VarChar(40)
}

model interviewQuestion {
  id          Int     @id @default(autoincrement())
  interviewId Int
  questionId  Int
  userId      Int
  subjectId   Int
  again       Boolean? @default(false)
  pin         Boolean? @default(false)
  isAgain     Boolean? @default(false)
}